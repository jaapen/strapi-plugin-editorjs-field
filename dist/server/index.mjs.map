{"version":3,"file":"index.mjs","sources":["../../server/src/utils/plugin-id.ts","../../server/src/utils/get-service.ts","../../server/src/register.ts","../../server/src/controllers/editorjs.ts","../../server/src/controllers/index.ts","../../server/src/config.ts","../../server/src/routes/index.ts","../../server/src/services/plugin.ts","../../server/src/services/index.ts","../../server/src/index.ts"],"sourcesContent":["const pluginId = \"editorjs\";\n\nexport default pluginId;\n","import pluginId from \"./plugin-id\";\n\nconst getService = (name: string): any => {\n  return strapi.plugin(pluginId).service(name);\n};\n\nexport default getService;\n","import { Strapi } from \"@strapi/strapi\";\n\nimport { pluginId } from \"./utils\";\n\nexport const register = ({ strapi }: { strapi: Strapi }) => {\n  strapi.customFields.register({\n    name: pluginId,\n    // @ts-ignore\n    plugin: pluginId,\n    type: \"richtext\",\n  });\n};\n","import { Context } from \"koa\";\nimport { Strapi } from \"@strapi/strapi\";\nimport ogs, { SuccessResult } from \"open-graph-scraper\";\nimport { parseMultipartData } from \"@strapi/utils\";\nimport axios from \"axios\";\nimport fs from \"fs\";\nimport path from \"path\";\nimport { LocalFileData } from \"get-file-object-from-local-path\";\nimport { getService } from \"../utils\";\nimport { StrapiRequestContext } from \"strapi-typed\";\nimport { PassThrough } from \"stream\";\n\ninterface CustomSuccessResult extends SuccessResult {\n  ogTitle?: string;\n  ogDescription?: string;\n  ogImage?: {\n    url: string;\n  };\n}\n\nexport default ({ strapi }: { strapi: Strapi }) => ({\n  config: async (ctx: StrapiRequestContext<never, any>) => {\n    const config = await getService(\"plugin\").getConfig();\n    ctx.send(config);\n  },\n\n  link: async (ctx: StrapiRequestContext<never, any>) => {\n    const result = await new Promise<{ success: number; meta: any }>(\n      (resolve) => {\n        ogs(ctx.query, (error, results, response: PassThrough) => {\n          if (error || !(\"ogTitle\" in results)) {\n            resolve({ success: 0, meta: {} });\n            return;\n          }\n\n          const customResults = results as CustomSuccessResult;\n          const imageUrl = customResults.ogImage?.url\n            ? { url: customResults.ogImage.url }\n            : undefined;\n\n          resolve({\n            success: 1,\n            meta: {\n              title: customResults.ogTitle,\n              description: customResults.ogDescription,\n              image: imageUrl,\n            },\n          });\n        });\n      }\n    );\n\n    ctx.send(result);\n  },\n\n  byFile: async (ctx: Context & StrapiRequestContext<never, any>) => {\n    try {\n      const { files } = parseMultipartData(ctx);\n\n      const [uploadedFile] = await strapi\n        .plugin(\"upload\")\n        .service(\"upload\")\n        .upload({\n          data: {},\n          files: Object.values(files),\n        });\n\n      ctx.send({\n        success: 1,\n        file: uploadedFile,\n      });\n    } catch (e: any) {\n      ctx.send(\n        {\n          success: 0,\n          message: e.message,\n        },\n        500\n      );\n    }\n  },\n\n  byURL: async (ctx: StrapiRequestContext<never, any>) => {\n    try {\n      const { url }: any = ctx.request.body;\n      const { name, ext } = path.parse(url);\n      const filePath = `./public/${name}${ext}`;\n\n      const response = await axios.get(url, { responseType: \"arraybuffer\" });\n      const buffer = Buffer.from(response.data, \"binary\");\n\n      await fs.promises.writeFile(filePath, buffer);\n\n      const fileData = new LocalFileData(filePath);\n\n      const file = {\n        path: filePath,\n        name: fileData.name,\n        type: fileData.type,\n        size: Buffer.byteLength(buffer),\n      };\n\n      const [uploadedFile] = await strapi\n        .plugin(\"upload\")\n        .service(\"upload\")\n        .upload({\n          data: {},\n          files: file,\n        });\n\n      await fs.promises.unlink(filePath);\n\n      ctx.send({\n        success: 1,\n        file: uploadedFile,\n      });\n    } catch (e: any) {\n      ctx.send(\n        {\n          success: 0,\n          message: e.message,\n        },\n        500\n      );\n    }\n  },\n});\n","import upload from \"./editorjs\";\n\nexport default {\n  editorjs: upload,\n};\n","export default {\n  default: {\n    header: null,\n    list: null,\n    checklist: null,\n    embed: null,\n    table: null,\n    warning: null,\n    code: null,\n    link_tool: null,\n    raw: null,\n    quote: null,\n    marker: null,\n    delimiter: null,\n    inlineCode: null,\n    image: null,\n    attaches: null,\n    component: null,\n    minHeight: null,\n  },\n};\n","\"use strict\";\n\nexport default {\n  editorjs: {\n    type: \"admin\",\n    routes: [\n      {\n        method: \"GET\",\n        path: \"/config\",\n        handler: \"editorjs.config\",\n        config: {\n          policies: [\"admin::isAuthenticatedAdmin\"],\n        },\n      },\n    ],\n  },\n  \"content-api\": {\n    type: \"content-api\",\n    routes: [\n      {\n        method: \"GET\",\n        path: \"/link\",\n        handler: \"editorjs.link\",\n        config: {\n          description: \"Get a URL link\",\n          auth: false,\n        },\n      },\n      {\n        method: \"POST\",\n        path: \"/image/byFile\",\n        handler: \"editorjs.byFile\",\n        config: {\n          auth: false,\n        },\n      },\n      {\n        method: \"POST\",\n        path: \"/image/byUrl\",\n        handler: \"editorjs.byURL\",\n        config: {\n          auth: false,\n        },\n      },\n    ],\n  },\n};\n","\"use strict\";\n\nimport { Strapi } from \"@strapi/strapi\";\n\nimport config from \"../config\";\nimport pluginId from \"../utils/plugin-id\";\n\nexport default ({ strapi }: { strapi: Strapi }) => ({\n  async getConfig() {\n    const data = await strapi.config.get(`plugin.${pluginId}`, config.default);\n\n    return data;\n  },\n});\n","\"use strict\";\n\nimport plugin from \"./plugin\";\n\nexport default {\n  plugin,\n};\n","\"use strict\";\n\nimport { register } from \"./register\";\nimport controllers from \"./controllers\";\nimport config from \"./config\";\nimport routes from \"./routes\";\nimport services from \"./services\";\n\nexport default {\n  register,\n  config,\n  routes,\n  controllers,\n  services,\n};\n"],"names":["strapi","config"],"mappings":";;;;;;AAAA,MAAM,WAAW;ACEjB,MAAM,aAAa,CAAC,SAAsB;AACxC,SAAO,OAAO,OAAO,QAAQ,EAAE,QAAQ,IAAI;AAC7C;ACAO,MAAM,WAAW,CAAC,EAAE,QAAAA,cAAiC;AAC1D,EAAAA,QAAO,aAAa,SAAS;AAAA,IAC3B,MAAM;AAAA;AAAA,IAEN,QAAQ;AAAA,IACR,MAAM;AAAA,EAAA,CACP;AACH;ACSA,MAAA,SAAe,CAAC,EAAE,QAAAA,QAAA,OAAkC;AAAA,EAClD,QAAQ,OAAO,QAA0C;AACvD,UAAMC,UAAS,MAAM,WAAW,QAAQ,EAAE,UAAU;AACpD,QAAI,KAAKA,OAAM;AAAA,EACjB;AAAA,EAEA,MAAM,OAAO,QAA0C;AAC/C,UAAA,SAAS,MAAM,IAAI;AAAA,MACvB,CAAC,YAAY;AACX,YAAI,IAAI,OAAO,CAAC,OAAO,SAAS,aAA0B;AACpD,cAAA,SAAS,EAAE,aAAa,UAAU;AACpC,oBAAQ,EAAE,SAAS,GAAG,MAAM,CAAA,EAAI,CAAA;AAChC;AAAA,UACF;AAEA,gBAAM,gBAAgB;AAChB,gBAAA,WAAW,cAAc,SAAS,MACpC,EAAE,KAAK,cAAc,QAAQ,IAC7B,IAAA;AAEI,kBAAA;AAAA,YACN,SAAS;AAAA,YACT,MAAM;AAAA,cACJ,OAAO,cAAc;AAAA,cACrB,aAAa,cAAc;AAAA,cAC3B,OAAO;AAAA,YACT;AAAA,UAAA,CACD;AAAA,QAAA,CACF;AAAA,MACH;AAAA,IAAA;AAGF,QAAI,KAAK,MAAM;AAAA,EACjB;AAAA,EAEA,QAAQ,OAAO,QAAoD;AAC7D,QAAA;AACF,YAAM,EAAE,MAAA,IAAU,mBAAmB,GAAG;AAElC,YAAA,CAAC,YAAY,IAAI,MAAMD,QAC1B,OAAO,QAAQ,EACf,QAAQ,QAAQ,EAChB,OAAO;AAAA,QACN,MAAM,CAAC;AAAA,QACP,OAAO,OAAO,OAAO,KAAK;AAAA,MAAA,CAC3B;AAEH,UAAI,KAAK;AAAA,QACP,SAAS;AAAA,QACT,MAAM;AAAA,MAAA,CACP;AAAA,aACM,GAAQ;AACX,UAAA;AAAA,QACF;AAAA,UACE,SAAS;AAAA,UACT,SAAS,EAAE;AAAA,QACb;AAAA,QACA;AAAA,MAAA;AAAA,IAEJ;AAAA,EACF;AAAA,EAEA,OAAO,OAAO,QAA0C;AAClD,QAAA;AACF,YAAM,EAAE,IAAa,IAAA,IAAI,QAAQ;AACjC,YAAM,EAAE,MAAM,IAAA,IAAQ,KAAK,MAAM,GAAG;AACpC,YAAM,WAAW,YAAY,IAAI,GAAG,GAAG;AAEjC,YAAA,WAAW,MAAM,MAAM,IAAI,KAAK,EAAE,cAAc,eAAe;AACrE,YAAM,SAAS,OAAO,KAAK,SAAS,MAAM,QAAQ;AAElD,YAAM,GAAG,SAAS,UAAU,UAAU,MAAM;AAEtC,YAAA,WAAW,IAAI,cAAc,QAAQ;AAE3C,YAAM,OAAO;AAAA,QACX,MAAM;AAAA,QACN,MAAM,SAAS;AAAA,QACf,MAAM,SAAS;AAAA,QACf,MAAM,OAAO,WAAW,MAAM;AAAA,MAAA;AAG1B,YAAA,CAAC,YAAY,IAAI,MAAMA,QAC1B,OAAO,QAAQ,EACf,QAAQ,QAAQ,EAChB,OAAO;AAAA,QACN,MAAM,CAAC;AAAA,QACP,OAAO;AAAA,MAAA,CACR;AAEG,YAAA,GAAG,SAAS,OAAO,QAAQ;AAEjC,UAAI,KAAK;AAAA,QACP,SAAS;AAAA,QACT,MAAM;AAAA,MAAA,CACP;AAAA,aACM,GAAQ;AACX,UAAA;AAAA,QACF;AAAA,UACE,SAAS;AAAA,UACT,SAAS,EAAE;AAAA,QACb;AAAA,QACA;AAAA,MAAA;AAAA,IAEJ;AAAA,EACF;AACF;AC5HA,MAAe,cAAA;AAAA,EACb,UAAU;AACZ;ACJA,MAAe,SAAA;AAAA,EACb,SAAS;AAAA,IACP,QAAQ;AAAA,IACR,MAAM;AAAA,IACN,WAAW;AAAA,IACX,OAAO;AAAA,IACP,OAAO;AAAA,IACP,SAAS;AAAA,IACT,MAAM;AAAA,IACN,WAAW;AAAA,IACX,KAAK;AAAA,IACL,OAAO;AAAA,IACP,QAAQ;AAAA,IACR,WAAW;AAAA,IACX,YAAY;AAAA,IACZ,OAAO;AAAA,IACP,UAAU;AAAA,IACV,WAAW;AAAA,IACX,WAAW;AAAA,EACb;AACF;AClBA,MAAe,SAAA;AAAA,EACb,UAAU;AAAA,IACR,MAAM;AAAA,IACN,QAAQ;AAAA,MACN;AAAA,QACE,QAAQ;AAAA,QACR,MAAM;AAAA,QACN,SAAS;AAAA,QACT,QAAQ;AAAA,UACN,UAAU,CAAC,6BAA6B;AAAA,QAC1C;AAAA,MACF;AAAA,IACF;AAAA,EACF;AAAA,EACA,eAAe;AAAA,IACb,MAAM;AAAA,IACN,QAAQ;AAAA,MACN;AAAA,QACE,QAAQ;AAAA,QACR,MAAM;AAAA,QACN,SAAS;AAAA,QACT,QAAQ;AAAA,UACN,aAAa;AAAA,UACb,MAAM;AAAA,QACR;AAAA,MACF;AAAA,MACA;AAAA,QACE,QAAQ;AAAA,QACR,MAAM;AAAA,QACN,SAAS;AAAA,QACT,QAAQ;AAAA,UACN,MAAM;AAAA,QACR;AAAA,MACF;AAAA,MACA;AAAA,QACE,QAAQ;AAAA,QACR,MAAM;AAAA,QACN,SAAS;AAAA,QACT,QAAQ;AAAA,UACN,MAAM;AAAA,QACR;AAAA,MACF;AAAA,IACF;AAAA,EACF;AACF;ACvCA,MAAA,SAAe,CAAC,EAAE,QAAAA,QAAA,OAAkC;AAAA,EAClD,MAAM,YAAY;AACV,UAAA,OAAO,MAAMA,QAAO,OAAO,IAAI,UAAU,QAAQ,IAAI,OAAO,OAAO;AAElE,WAAA;AAAA,EACT;AACF;ACTA,MAAe,WAAA;AAAA,EACb;AACF;ACEA,MAAe,QAAA;AAAA,EACb;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF;"}